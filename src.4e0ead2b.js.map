{"version":3,"sources":["src/index.ts"],"names":[],"mappings":";;;AAmCC,aAAA,QAAA,YAAA,EAVD,IAzBA,IAAA,EAAA,QAAA,MAEM,EAAQ,CACZ,KADY,8nBAEZ,MAFY,4fAGZ,WAAU,qgBAGN,EAAa,CACjB,KAAM,SAAA,GACJ,MAAA,2EAA2E,mBACzE,IAGJ,WAAY,SAAA,GACV,MAAA,sDAAsD,mBACpD,IAGJ,MAAO,SAAA,GACL,MAAA,gEAAgE,mBAC9D,KAIgC,EAAA,EAAA,EAAA,OAAO,QAAQ,GAAf,EAAA,EAAA,OAAA,IAAuB,CAAlD,IAAA,EAAA,EAAA,GAAC,EAAA,EAAA,GAAU,EAAA,EAAA,GACd,EAAO,SAAS,cAAc,IAAI,GAElC,EAAO,EAAK,cAAc,SAChC,EAAK,YAAc,EAEb,IAAA,EAAS,EAAK,cAAiC,oBACjD,IACF,EAAO,KAAO,EAAW,GAAU","file":"src.4e0ead2b.js","sourceRoot":"..","sourcesContent":["import { readFileSync } from \"fs\";\n\nconst files = {\n  rust: readFileSync(__dirname + \"/../content/stack/stack.rs\", \"utf-8\"),\n  swift: readFileSync(__dirname + \"/../content/stack/stack.swift\", \"utf-8\"),\n  typescript: readFileSync(__dirname + \"/../content/stack/stack.ts\", \"utf-8\"),\n};\n\nconst playground = {\n  rust: code =>\n    `https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&code=${encodeURIComponent(\n      code,\n    )}`,\n\n  typescript: code =>\n    `https://www.typescriptlang.org/play/index.html#src=${encodeURIComponent(\n      code,\n    )}`,\n\n  swift: code =>\n    `http://online.swiftplayground.run/?sourceURL=data:text/plain,${encodeURIComponent(\n      code,\n    )}`,\n};\n\nfor (const [language, fileContent] of Object.entries(files)) {\n  const node = document.querySelector(`#${language}`);\n\n  const code = node.querySelector(\".code\");\n  code.textContent = fileContent;\n\n  const anchor = node.querySelector<HTMLAnchorElement>(\".playground-link\");\n  if (anchor) {\n    anchor.href = playground[language](fileContent);\n  }\n}\n"]}